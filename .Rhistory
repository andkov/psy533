# A: 4, with 4 factors the confidence interval for the point estimate includes zero
out <- MLFA(Correlation.Matrix = R, n.factors=2, n.obs=360) # conduct MLFA and collect all rotations in a single object
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out, cutoff=.3, num.digits=2)
out.4 <- MLFA(Correlation.Matrix = R, n.factors=4, n.obs=360) # conduct MLFA and collect all rotations in a single object
out.2 <- MLFA(Correlation.Matrix = R, n.factors=2, n.obs=360) # conduct MLFA and collect all rotations in a single object
Loadings(out.4, cutoff=.3, num.digits=2)
=======
Scree.Plot(R, main="Scree plot of Sence of Community (SOC) variables (n=575)") # plot the eigen values
FA.Stats(R, n.factors=1:5, n.obs=575, main="RMSEA plot of 19 Psych Variables (n=575)") # Request Chi-Square and RMSEA stats
>>>>>>> origin/master
<<<<<<< HEAD
cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model
cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
=======
??sem
>>>>>>> origin/master
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
library(corrgram)
library(psych)
library(sem)
library(ggplot2)
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
#          R            Correlation/Covariance matrix - R
#      F      F'        Grahm-Factors                 - F
#   VD1/2   D1/2V'      Principle Component patterns  - pcPattern
#   V     D     V'      Earhart-Young decomposition   - V, D
#      Rv = cv          Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
<<<<<<< HEAD
cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model
cfa1.fit <- sem(cfa1.model, R, 1000)
summary(cfa1.fit)
summary(cfa1.fit)
??sem
a <- summary(cfa1.fit)
str(a)
RMSEA
a$RMSEA
a$AIC
summary(cfa1.fit)
mod.indices(cfa1.fit)
modIndices(cfa1.fit)
cfa2.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA2.txt")
cfa2.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA2.txt")
cfa2.fit <- sem(cfa2.model, R, 1000)
summary(cfa2.fit)
modIndices(cfa2.fit)
cfa3.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA3.txt")
cfa3.fit <- sem(cfa3.model, R, 1000)
summary(cfa3.fit)
modIndices(cfa3.fit)
cfa4.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA4.txt")
cfa4.fit <- sem(cfa4.model, R, 1000)
summary(cfa4.fit)
modIndices(cfa4.fit)
cfa4.fit
=======
# cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.fit <- sem(cfa1.model, R, 1000)
summary(cfa1.fit)
a <- summary(cfa1.fit)
str(a)
a$RMSEA
<<<<<<< HEAD
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
setwd(dir = "C:/Users/koval_000/Documents/533")
library(Hmisc) # matrix and utility functions
library(corrgram) # graphing correlation matrices
library(sem) # structural equation modeling
#### Resources ####
## Please consult the website of James Steiger ( www.statpower.net ) for all materials pertaining to this demonstration.
## For the demonstraction of factor analysis with 'sem' package see Steiger's tutorial entitled "CFA with R" ( http://statpower.net/Content/312/Handout/Confirmatory%20Factor%20Analysis%20with%20R.pdf )
## For the demonstration of FA with custom functions see Steiger's tutorial entitled "Advanced CFA with R" ( http://statpower.net/Content/312/Handout/Advanced%20Confirmatory%20Factor%20Analysis%20in%20R.pdf )
## For detailed discussion of 'sem' package see John Fox paper "Structural Equation Modeling in R with the sem Package" ( http://socserv.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-SEMs.pdf )
## For 'sem' package documentation see http://cran.r-project.org/web/packages/sem/sem.pdf or http://www.rdocumentation.org/packages/sem
## For "Exploratory-Confirmatory" Approach see Karl Joreskog 1978 paper ( http://www.researchgate.net/profile/Karl_Joereskog/publication/24062332_Structural_analysis_of_covariance_and_correlation_matrices/links/0046352b8b078d34d6000000.pdf )
#### Custom functions ####
=======
<<<<<<< HEAD
>>>>>>> origin/master
=======
install.packages("semTools")
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
library(corrgram)
library(psych)
library(sem)
library(ggplot2)
library(semTools)
# Useful function for multivariate stats
>>>>>>> origin/master
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
<<<<<<< HEAD
#### Data and Option prep ####
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
# R Correlation/Covariance matrix - R
# F F' Grahm-Factors - F
# VD1/2 D1/2V' Principle Component patterns -
# V D V' Earhart-Young decomposition - V, D
# Rv = cv Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
round(cor(AthleticsData),2)
corrgram(x=R,order=TRUE,
main="Correlogram of Athletic Data",
upper.panel=panel.pie,
lower.panel=panel.shade)
## selection of availible fit/information indices
# opt <- options(fit.indices = c("GFI", "AGFI", "RMSEA", "NFI", "NNFI","CFI", "RNI", "IFI", "SRMR", "AIC", "AICc", "BIC", "CAIC"))
opt <- options(fit.indices= c("GFI","RMSEA"))
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
setwd(dir = "C:/Users/koval_000/Documents/533")
library(Hmisc) # matrix and utility functions
library(corrgram) # graphing correlation matrices
library(sem) # structural equation modeling
#### Resources ####
## Please consult the website of James Steiger ( www.statpower.net ) for all materials pertaining to this demonstration.
## For the demonstraction of factor analysis with 'sem' package see Steiger's tutorial entitled "CFA with R" ( http://statpower.net/Content/312/Handout/Confirmatory%20Factor%20Analysis%20with%20R.pdf )
## For the demonstration of FA with custom functions see Steiger's tutorial entitled "Advanced CFA with R" ( http://statpower.net/Content/312/Handout/Advanced%20Confirmatory%20Factor%20Analysis%20in%20R.pdf )
## For detailed discussion of 'sem' package see John Fox paper "Structural Equation Modeling in R with the sem Package" ( http://socserv.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-SEMs.pdf )
## For 'sem' package documentation see http://cran.r-project.org/web/packages/sem/sem.pdf or http://www.rdocumentation.org/packages/sem
## For "Exploratory-Confirmatory" Approach see Karl Joreskog 1978 paper ( http://www.researchgate.net/profile/Karl_Joereskog/publication/24062332_Structural_analysis_of_covariance_and_correlation_matrices/links/0046352b8b078d34d6000000.pdf )
#### Custom functions ####
=======
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
#          R            Correlation/Covariance matrix - R
#      F      F'        Grahm-Factors                 - F
#   VD1/2   D1/2V'      Principle Component patterns  - pcPattern
#   V     D     V'      Earhart-Young decomposition   - V, D
#      Rv = cv          Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.fit <- sem(cfa1.model, R, 1000)
summary(cfa1.fit)
R
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.fit <- sem(cfa1.model, R, 1000)
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
library(corrgram)
library(psych)
library(sem)
library(ggplot2)
library(semTools)
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
# Useful function for multivariate stats
>>>>>>> origin/master
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
<<<<<<< HEAD
#### Data and Option prep ####
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
# R Correlation/Covariance matrix - R
# F F' Grahm-Factors - F
# VD1/2 D1/2V' Principle Component patterns -
# V D V' Earhart-Young decomposition - V, D
# Rv = cv Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
round(cor(AthleticsData),2)
corrgram(x=R,order=TRUE,
main="Correlogram of Athletic Data",
upper.panel=panel.pie,
lower.panel=panel.shade)
## selection of availible fit/information indices
# opt <- options(fit.indices = c("GFI", "AGFI", "RMSEA", "NFI", "NNFI","CFI", "RNI", "IFI", "SRMR", "AIC", "AICc", "BIC", "CAIC"))
opt <- options(fit.indices= c("-2LL", "GFI", "AGFI","RMSEA"))
pureCFA.fit.T <- QuickCFA(R=R, n.factors=3, n.obs=1000)
=======
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
#          R            Correlation/Covariance matrix - R
#      F      F'        Grahm-Factors                 - F
#   VD1/2   D1/2V'      Principle Component patterns  - pcPattern
#   V     D     V'      Earhart-Young decomposition   - V, D
#      Rv = cv          Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
# cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.fit <- sem(cfa1.model, R, 1000)
summary(cfa1.fit)
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
library(corrgram)
library(psych)
library(sem)
library(ggplot2)
# library(semTools)
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
#          R            Correlation/Covariance matrix - R
#      F      F'        Grahm-Factors                 - F
#   VD1/2   D1/2V'      Principle Component patterns  - pcPattern
#   V     D     V'      Earhart-Young decomposition   - V, D
#      Rv = cv          Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
# cfa1.model <- specify.model("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.model <- specifyModel("./Cases/CFA with R/Class Demo/CFA1.txt")
cfa1.fit <- sem(cfa1.model, R, 1000)
summary(cfa1.fit)
summary(cfa1.fit)
cfa1.fit
str(cfa1.fit)
cfa1.fit$objective
opt <- options(fit.indices= c("GFI","RMSEA"))
cfa1.fit <- sem(cfa1.model, R, 1000, opt)
summary(cfa1.fit, opt)
standardizedCoefficients(cfa1.fit)
R
a <- 616.48
rate1 <- 0.80293
a*rate1
+14.38
a*rate1 + 14.38
>>>>>>> 906266f8960fc37f6eb781427c59a737b7a55fa4
>>>>>>> origin/master
ds<-Voices
summary(ds)
ds<-Voices
Voices <-  read.csv("./Voices.csv")
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
setwd(dir = "C:/Users/koval_000/Documents/533")
library(Hmisc) # matrix and utility functions
library(corrgram) # graphing correlation matrices
library(sem) # structural equation modeling
#### Resources ####
## Please consult the website of James Steiger ( www.statpower.net ) for all materials pertaining to this demonstration.
## For the demonstraction of factor analysis with 'sem' package see Steiger's tutorial entitled "CFA with R" ( http://statpower.net/Content/312/Handout/Confirmatory%20Factor%20Analysis%20with%20R.pdf )
## For the demonstration of FA with custom functions see Steiger's tutorial entitled "Advanced CFA with R" ( http://statpower.net/Content/312/Handout/Advanced%20Confirmatory%20Factor%20Analysis%20in%20R.pdf )
## For detailed discussion of 'sem' package see John Fox paper "Structural Equation Modeling in R with the sem Package" ( http://socserv.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-SEMs.pdf )
## For 'sem' package documentation see http://cran.r-project.org/web/packages/sem/sem.pdf or http://www.rdocumentation.org/packages/sem
## For "Exploratory-Confirmatory" Approach see Karl Joreskog 1978 paper ( http://www.researchgate.net/profile/Karl_Joereskog/publication/24062332_Structural_analysis_of_covariance_and_correlation_matrices/links/0046352b8b078d34d6000000.pdf )
#### Custom functions ####
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
#### Data and Option prep ####
# Load Athletic data directly from James Stieger's website
Voices <-  read.csv("./Voices.csv")
head(Voices)
ds<-Voices
summary(ds)
R<-cor(ds) # correlation matrix R of variables in Voices
S<-cov(ds) # covariance matrix S of variables in Voices)
R
empty<-matrix(numeric(0),ncol(R),ncol(R))
rownames(empty)<-rownames(R)
colnames(empty)<-paste0("xC",1:ncol(R))
Scree.Plot(R)
FA.Stats(R,n.factors=1:8,n.obs=100, RMSEA.cutoff=.05)
FA.Stats(vR,300,1:7) # verify the choice of number of factors
vR<-cor(Voices) # correlation matrix R of variables in AthleticsData
vR
Scree.Plot(vR)
FA.Stats(vR,300,1:7) # verify the choice of number of factors
Loadings(fit, cutoff=.3, num.digits=2) ##
fit
fit <- MLFA(vR,3,300) # conduct FA
fit
FA.Stats(vR,300,1:7) # verify the choice of number of factors
Loadings(fit, cutoff=.3, num.digits=2) ##
fit.1 <- QuickEFAtoCFA(vR=R,n.factors = 3, n.obs = 300, cov.matrix=FALSE, cutoff = .3)
fit.1 <- QuickEFAtoCFA(R=vR,n.factors = 3, n.obs = 300, cov.matrix=FALSE, cutoff = .3)
fit.1
CheckMod(fit.1)
fit.1 <- QuickEFAtoCFA(R=vR,n.factors = 3, n.obs = 300, cov.matrix=FALSE, cutoff = .6)
fit.1
CheckMod(fit.1)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 300, cov.matrix=FALSE, cutoff = .6)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 300, cov.matrix=FALSE, cutoff = .6)
fit.1
CheckMod(fit.1)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=FALSE, cutoff = .6)
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5)
######### Set Up Working Directory!!
setwd(dir = "C:/Users/koval_000/Documents/533")
library(Hmisc) # matrix and utility functions
library(corrgram) # graphing correlation matrices
library(sem) # structural equation modeling
#### Resources ####
## Please consult the website of James Steiger ( www.statpower.net ) for all materials pertaining to this demonstration.
## For the demonstraction of factor analysis with 'sem' package see Steiger's tutorial entitled "CFA with R" ( http://statpower.net/Content/312/Handout/Confirmatory%20Factor%20Analysis%20with%20R.pdf )
## For the demonstration of FA with custom functions see Steiger's tutorial entitled "Advanced CFA with R" ( http://statpower.net/Content/312/Handout/Advanced%20Confirmatory%20Factor%20Analysis%20in%20R.pdf )
## For detailed discussion of 'sem' package see John Fox paper "Structural Equation Modeling in R with the sem Package" ( http://socserv.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-SEMs.pdf )
## For 'sem' package documentation see http://cran.r-project.org/web/packages/sem/sem.pdf or http://www.rdocumentation.org/packages/sem
## For "Exploratory-Confirmatory" Approach see Karl Joreskog 1978 paper ( http://www.researchgate.net/profile/Karl_Joereskog/publication/24062332_Structural_analysis_of_covariance_and_correlation_matrices/links/0046352b8b078d34d6000000.pdf )
#### Custom functions ####
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
#### Data and Option prep ####
# Load Athletic data directly from James Stieger's website
AthleticsData <- read.csv("http://statpower.net/Content/312/Homework/AthleticsData.csv")
# attach(AthleticsData)
# R Correlation/Covariance matrix - R
# F F' Grahm-Factors - F
# VD1/2 D1/2V' Principle Component patterns -
# V D V' Earhart-Young decomposition - V, D
# Rv = cv Eigenvalues and Eigenvectors
R<-cor(AthleticsData) # correlation matrix R of variables in AthleticsData
R
# Load Athletic data directly from James Stieger's website
Voices <-  read.csv("./Voices.csv")
head(Voices)
# attach(AthleticsData)
# R Correlation/Covariance matrix - R
# F F' Grahm-Factors - F
# VD1/2 D1/2V' Principle Component patterns -
# V D V' Earhart-Young decomposition - V, D
# Rv = cv Eigenvalues and Eigenvectors
vR<-cor(Voices) # correlation matrix R of variables in AthleticsData
vR
class(R)
calss(vR)
class(vR)
R
vR
str(R)
str(vR)
fit <- MLFA(vR,3,300) # conduct FA
FA.Stats(vR,300,1:7) # verify the choice of number of factors
FA.Stats(R,300,1:7) # verify the choice of number of factors
FA.Stats(vR,300,1:7) # verify the choice of number of factors
Loadings(fit, cutoff=.3, num.digits=2) ##
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=FALSE, cutoff = .6)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000)
fit.1
CheckMod(fit.1)
modIndices(fit.1)
fit.1 <- QuickEFAtoCFA(R=vR,n.factors = 3, n.obs = 1000)
fit.1
CheckMod(fit.1)
R <- cor(AthleticData)
R <- cor(AthleticData)
AthleticsData
R <- cor(AthleticsData)
fit <- MLFA(R=R,n.factors = 3, n.obs=1000) # conduct FA
fit <- MLFA(, n.factors = 3, n.obs=1000) # conduct FA
fit <- MLFA(R, n.factors = 3, n.obs=1000) # conduct FA
fit ##
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, rotation="Varimax")
GetPrettyPattern(fit.1)# examine factor loading
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T)
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F)
GetPrettyPattern(fit.1)# examine factor loading
GetPrettyPattern(fit.2)# examine factor loading
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.3)
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.5)
GetPrettyPattern(fit.1)# examine factor loading
GetPrettyPattern(fit.2)# examine factor loading
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.4)
GetPrettyPattern(fit.1)# examine factor loading
GetPrettyPattern(fit.2)# examine factor loading
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.49)
GetPrettyPattern(fit.2)# examine factor loading
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.4)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.2)
GetPrettyPattern(fit.1)# examine factor loading
fit
Loadings(fit,cutoff=.3)
Loadings(fit,cutoff=.6)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.2)
GetPrettyPattern(fit.1)# examine factor loading
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.1)
GetPrettyPattern(fit.1)# examine factor loading
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.5)
GetPrettyPattern(fit.1)# examine factor loading
Loadings(fit,cutoff=.5)
modIndices(fit.1)
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.5,factor.names = c("Hand-Eye","Endurance","Strength"))
GetPrettyPattern(fit.1)# examine factor loading
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.3,)
GetPrettyPattern(fit.1)# examine factor loading
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.4)
GetPrettyPattern(fit.2)# examine factor loading
modIndices(fit.2)
ModIndicies(fit.2)
ModIndex(fit.2)
CneckMode(fit.2)
CneckMod(fit.2)
CheckMod(fit.2)
fit.3 <- UseMod(fit.2)
sem::modIndices(fit.2) # examine top 5 mod Indices
CheckMod(fit.2)# largest legal mod index
fit.3 <- UseMod(fit.2)# fit new model
GetPrettyPattern(fit.3)# examine factor loading
GetPrettyPattern(fit.3)# examine factor loading
summary(fit.3)[c(1:7)]# evaluate model performance
FA.Stats(R, n.factors=3, n.obs =1000)
FA.Stats(R, n.factors=1:7, n.obs =1000)
Loadings(fit,cutoff=.5)
Loadings(fit,cutoff=.5, rotation="Varimax") # examine patterns
Loadings(fit,cutoff=.5)$Varimax # examine patterns
str(Loadings(fit,cutoff=.5) )
a <- FAtoSEM(x=AthleticsData,factor.names=c("F1","F2","F3"))
summary(fit.3)[c(1:7)]# evaluate model performance
CheckMod(fit.2)# largest legal mod index
fit.3 <- UseMod(fit.2)# fit new model
GetPrettyPattern(fit.3)# examine factor loading
summary(fit.3)[c(1:7)]# evaluate model performance
R <- cor(AthleticsData) # remind what R is
fit <- MLFA(R, n.factors = 3, n.obs=1000) # conduct FA
fit # Examine patterns/rotations
FA.Stats(R, n.factors=1:7, n.obs =1000) # verify retention decision
Loadings(fit,cutoff=.5) # examine patterns
#  imports EFA solution to be tested with CFA
#  all values above cutoff= are freely estimated, others fixed to 0
#  default cov.matrix=TRUE, oblique solution
#  can specify what rotatation to use with rotation= option
fit.1 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=T, cutoff=.3)
fit.2 <- QuickEFAtoCFA(R=R,n.factors = 3, n.obs = 1000, cov.matrix=F, cutoff=.4)
## Examin how CFA tested the theory supplied by EFA
GetPrettyPattern(fit.1)# examine factor loading (obliQue)
GetPrettyPattern(fit.2)# examine factor loading  (orThogonal)
str(fit.1)
fit.1$semmod
cefa1.fit <- sem(fit.1$semmod, R, 1000, opt)
cefa1.fit <- sem(fit.1$semmod, R, 1000)
opt <- options(fit.indices= c("GFI","AGFI","RMSEA","AIC","BIC"))
summary(cfa1.fit, opt)
cefa1.fit <- sem(fit.1$semmod, R, 1000)
cefa1.fit
cefa1.fit <- sem::sem(fit.1$semmod, R, 1000)
summary(cfa1.fit, opt)
summary(cefa1.fit, opt)
summary(cefa1.fit, opt)
modIndices(cfa1.fit)
modIndices(cefa1.fit)
CheckMod(cefa1.fit)
GetPrettyPattern(cefa1.fit)# examine factor loading
cefa.fit <- sem::sem(fit.1$semmod, R, 1000)
summary(cefa.fit, opt)
modIndices(cefa.fit)
GetPrettyPattern(cefa.fit)# examine factor loading
CheckMod(cefa.fit)
a <- FAtoREF(R=R, factor.names = c("Hand-Eye","Endurance","Strength"))
a <- FAtoREF(x=AthleticData, R=R, factor.names = c("Hand-Eye","Endurance","Strength"))
a <- FAtoREF(x=AthleticsData, R=R, factor.names = c("Hand-Eye","Endurance","Strength"))
jor.fit <- QuickJoreskog(R,3,1000)
jor.fit
GetPrettyPattern(jor.fit)
AthleticsData
a <- FAtoREF(x=AthleticsData, R=R,model.name = "new", factor.names = c("Hand-Eye","Endurance","Strength"))
a <- FAtoREF(R=R,model.name = "new", factor.names = c("Hand-Eye","Endurance","Strength"))
a <- FAtoREF(x=AthleticsData, R=R,model.name = "new", factor.names = c("Hand-Eye","Endurance","Strength"))
a <- FAtoREF(x=jor.fit, R=R,model.name = "new", factor.names = c("Hand-Eye","Endurance","Strength"))
jor.fit
GetPrettyPattern(jor.fit)
