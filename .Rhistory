abs(Ve)
abs(Ve)
abs(Vs)
abs(Ve)-abs(Vs)
round(abs(Ve)-abs(Vs),3)
sign(Ve)+sign(Vs)
sign(Ve)
sign(Vs)
sign(Ve)+sign(Vs)
Loadings(out, cutoff=.3, num.digits=2)
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
#### Data prep ####
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
#### Data prep ####
# Many packages provide data for examples, to see availible data load the packages and execute the following:
data() # lists all availible datasets
data(Harman74.cor) # calling Harman74.cor into existence inside RStudio session
R <- as.matrix(Harman74.cor[[1]]) # segregating the correlation matrix
colnames(R) # lists the names of the columns
row.names(R) # lists the names of the rows
R # print
# for more on the dataset see  Harman, H. H. (1976) Modern Factor Analysis, Third Edition Revised, University of Chicago Press, Table 7.4. ( http://books.google.ca/books?id=e-vMN68C3M4C&printsec=frontcover&source=gbs_ge_summary_r&cad=0#v=twopage&q&f=false , page 125)
#### Data Explorations ####
corrgram(R)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = F)
#### Scree plot ####
eigen(R)$values # examine eigenvalues directly
# plot the eigen values
Scree.Plot(R, main="Scree plot of 24 Psychological variables (n=145)")
FA.Stats(R, n.factors=1:10, n.obs=145, main="RMSEA plot of 24 Psych Variables (n=145)")
# NOTE : The RMSEA index can be thought of roughly as a root mean square standardized residual. # values above .10 indicate an inadequate fit,
# values below .05 indicate a very good fit.
# Point estimates below .01 indicate an outstanding fit, and are seldom obtained.
# CONFIDENCE INTERVALS must be interpreted, not the point estimates!!!
# look for the point estimage whose confidence interval includes zero (indicating a failure to reject the null hypothesis of perfect fit, i.e., RMSEA = 0, at the 0.05 level).
#### Maximum Likelihood Factor Analysis ####
# collect six rotations in a single object
out <- MLFA(Correlation.Matrix = R, n.factors=5, n.obs=145)
Loadings(out, cutoff=.3, num.digits=2)
a <- Loadings(out, cutoff=.3, num.digits=2)
str(a)
Loadings(out, cutoff=.3, num.digits=2)
out <- MLFA(Correlation.Matrix = R, n.factors=5, n.obs=145,cutoff = .4)
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out, cutoff=.4, num.digits=2)
Loadings(out, cutoff=.1, num.digits=2)
Loadings(out, cutoff=.2, num.digits=2)
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out, cutoff=.4, num.digits=2)
Loadings(out, cutoff=.4, num.digits=2)
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out, cutoff=.3, num.digits=2)
out <- MLFA(Correlation.Matrix = R, n.factors=4, n.obs=145)
Loadings(out, cutoff=.3, num.digits=2)
data(Thurstone)
data(Thurstone)
ds <- data(Thurstone)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
data(Thurstone)
data()
data(Thurstone)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
ds <- data(Thurstone)
ds <- data(Thurstone.33)
data()
psych::data()
psych:data()
psych:data(Thurstone)
psych:data(Thurstone[[1]])
psych:data(Thurstone[1])
psych:data(Thurstone)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration.
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
#### Data prep ####
# Many packages provide data for examples, to see availible data load the packages and execute the following:
data() # lists all availible datasets
data(Harman74.cor) # calling Harman74.cor into existence inside RStudio session
R <- as.matrix(Harman74.cor[[1]]) # segregating the correlation matrix
colnames(R) # lists the names of the columns
row.names(R) # lists the names of the rows
R # print
psych:data(Thurstone)
psych:data(Thurstone.33)
data(Thurstone.33)
data(Thurstone.33[1])
data(Thurstone.33[[1])
data(Thurstone.33[[1]])
data(Thurstone[[1]])
data(Thurstone[1])
data(Thurstone)
datasets()
data()
data(Schmid)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
data(Thurstone)
data(Thurstone.33)
ds <- data(Thurstone.33)
ds <- data"(Thurstone.33")
ds <- data("Thurstone.33")
ds <- data(Thurstone)
data(death_reg)
data(Thurstone)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
data(Thurstone)
View(Thurstone)
R <- as.matrix(Thurstone)
R
??Thurstone
??data(Thurstone)
Scree.Plot(R, main="Scree plot of Thurstone data (n=213)")
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = F)
R
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
FA.Stats(R, n.factors=1:4, n.obs=145, main="RMSEA plot of 24 Psych Variables (n=145)")
FA.Stats(R, n.factors=1:4, n.obs=213, main="RMSEA plot of 24 Psych Variables (n=145)")
Scree.Plot(R, main="Scree plot of Thurstone data (n=213)")
FA.Stats(R, n.factors=1:4, n.obs=213, main="RMSEA plot of 24 Psych Variables (n=145)")
out.2 <- MLFA(Correlation.Matrix = R.2, n.factors=3, n.obs=213)
R.2 <- as.matrix(Thurstone)
R.2
out.2 <- MLFA(Correlation.Matrix = R.2, n.factors=3, n.obs=213)
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out.2, cutoff=.3, num.digits=2)
Loadings(out.2, cutoff=.3, num.digits=2)
FAtoCFA(out.2$Bifactor,
model.name="fit")
str(fit)
a <- FAtoCFA(out.2$Bifactor,
model.name="fit")
b <-FAtoSEM(out.2$Bifactor,
model.name="fit3",
make.start.values=TRUE)
b
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration. ( See Psychology 312)
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
# Load Athletic data directly from James Stieger's website
#### Data prep ####
# Many packages provide data for examples, to see availible data load the packages and execute the following:
data() # lists all availible datasets
data(Harman74.cor) # calling Harman74.cor into existence inside RStudio session
R <- as.matrix(Harman74.cor[[1]]) # segregating the correlation matrix
colnames(R) # lists the names of the columns
row.names(R) # lists the names of the rows
R # print
# for more on the dataset see  Harman, H. H. (1976) Modern Factor Analysis, Third Edition Revised, University of Chicago Press, Table 7.4. ( http://books.google.ca/books?id=e-vMN68C3M4C&printsec=frontcover&source=gbs_ge_summary_r&cad=0#v=twopage&q&f=false , page 125)
#### Data Explorations ####
corrgram(R) # get the basic correlogram
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie) # customize panels
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
out$Unrotated # request only Unrotated
out <- MLFA(Correlation.Matrix = R, n.factors=4, n.obs=145) # conduct MLFA and collect all rotations in a single object
Loadings(out, cutoff=.3, num.digits=2)
out$Unrotated # request only Unrotated
str(out$Unrotated)
out$Unrotated$F
Loadings(out, cutoff=.3, num.digits=2)
data(Harman74.cor) # calling Harman74.cor into existence inside RStudio session
R <- as.matrix(harman74.cor)
R <- as.matrix(Harman74.cor)
View(R)
pathHome <- getwd()
pathHome
pathFile <- file.path(pathHome,"HW3.txt")
pathVarnames <- file.path(pathHome,"varnames.txt")
ds <- read.table(pathFile)
pathFile <- file.path(pathHome,"HW3.txt")
pathFile
pathFile <- file.path(pathHome,"Homework/HW3.txt")
pathVarnames <- file.path(pathHome,"Homework/varnames.txt")
#### Data prep ####
ds <- read.table(pathFile)
head(ds)
ds <- read.table(pathFile,stringsAsFactors = T)
head(ds)
str(ds)
ds <- read.table(pathFile,stringsAsFactors = F, as.is = T)
head(ds)
str(ds)
ds <- read.table(pathFile, as.is = T)
head(ds)
str(ds)
ds <- read.table(pathFile)
head(ds)
str(ds)
ds <- read.table(pathFile, as.is=T)
head(ds)
str(ds)
colnames(ds)
for(i in colnames(ds)){
ifelse(ds[,i] == ".",ds[,i] <- NA, ds[,i])
}
str(ds) # examine the structure of the object
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
ifelse(ds[,"V1"] == ".",ds[,"V1"] <- NA, ds[,"V1"])
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
ds[ds=="."] <- NA
str(ds) # examine the structure of the object
head(ds) # print the first few lines
noyesLevels<- c(0,1)
noyesLabels<- c("NO", "YES")
varlist <- colnames(ds)
for(i in varlist){
ds[,i)]<- ordered(ds[,i],
levels = noyesLevels,
labels = noyesLabels)
}
noyesLevels
noyesLabels
colnames(ds)
varlist
noyesLevels<- c(0,1)
noyesLabels<- c("NO", "YES")
varlist <- colnames(ds)
for(i in varlist){
ds[,i]<- ordered(ds[,i], levels = noyesLevels,labels = noyesLabels)
}
str(ds) # examine the structure of the object
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
# convert "." into missing values
ds[ds == "."] <- NA
# convert into factors and assign labels
noyesLevels<- c(0,1)
noyesLabels<- c("NO", "YES")
varlist <- colnames(ds)
for(i in varlist){
ds[,i]<- factor(ds[,i], levels = noyesLevels,labels = noyesLabels)
}
str(ds) # examine the structure of the object
R <- corr(ds)
library(Hmisc)# multipurpose
R <- corr(ds)
R <- cor(ds)
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration. ( See Psychology 312)
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
pathHome <- getwd()
pathFile <- file.path(pathHome,"Homework/HW3.txt")
pathVarnames <- file.path(pathHome,"Homework/varnames.txt")
#### Data prep ####
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
# convert "." into missing values
ds[ds == "."] <- NA
ds[ds == "NO"] <- 0
ds[ds == "YES"] <- 1
R <- cor(ds)
str(ds) # examine the structure of the object
#### SETUP ####
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # control the decimal places in the output
# Install packages if necessary
# install.packages("psych")
# install.packages("corrgram")
## load the packages
library(psych) # multipurpose for psychologist
library(corrgram) # for graphing correlation matrices
library(Hmisc)# multipurpose
library(sem) # structural equation modeling
library(reshape2) # data transformation
library(ggplot2) # general graphing
library(plotrix) # ploting matrix graphs
# Please consult the website of James Steiger (www.statpower.net) for all materials pertaining to this demonstration. ( See Psychology 312)
## load some custom functions
# Useful function for multivariate stats
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Functions to assist you in FA and SEM
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
# Functions by Dirk Enzmann to aid promax rotation
source("http://statpower.net/Content/312/R%20Stuff/fa.promax.R")
pathHome <- getwd()
pathFile <- file.path(pathHome,"Homework/HW3.txt")
pathVarnames <- file.path(pathHome,"Homework/varnames.txt")
#### Data prep ####
ds <- read.table(pathFile, as.is=T) # read in the data
head(ds) # print the first few lines
str(ds) # examine the structure of the object
# convert "." into missing values
View(ds)
ds[ds == "."] <- NA
View(ds)
ds[ds == "NO"] <- 0
View(ds)
View(ds)
table(ds$v1)
table(ds$V1)
ds[ds == "No"] <- 0
ds[ds == "Yes"] <- 1
View(ds)
for(i in  colnames(ds)){
ds[,i]<- as.numeric(ds[,i])
}
str(ds) # examine the structure of the object
R <- cor(ds)
R
View(ds)
cor(ds$V1,ds$V2)
R <- cor(ds,use = "complete.obs")
View(R)
varNames <- paste(var,1:19)
varNames <- paste("var",1:19)
varNames
R <- cor(ds,use = "complete.obs")
R
options("scipen"=10, "digits"=3) # control the decimal places in the output
R
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie) # customize panels
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T) # sort by PCA
corrgram(R) # get the basic correlogram
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie) # customize panels
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
eigen(R)$values # examine eigenvalues directly
dim(ds)
nrow(ds)
Scree.Plot(R, main="Scree plot of 19 Psychological variables (n=702)") # plot the eigen values
FA.Stats(R, n.factors=1:10, n.obs=145, main="RMSEA plot of 19 Psych Variables (n=702)") # Request Chi-Square and RMSEA stats
FA.Stats(R, n.factors=1:10, n.obs=702, main="RMSEA plot of 19 Psych Variables (n=702)") # Request Chi-Square and RMSEA stats
ds1 <- na.rm(ds)
ds1 <- na.omit(ds)
View(ds1)
dim(ds)
ds <- na.omit(ds)
dim(ds)
R <- cor(ds)
# Print the corrleation matrix
R
# print a correlogram of the correlation matrix using corrgram() function of the corrgram package, use default options
corrgram(R)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie)
# further customize the correlogram so that variable are ordered according to the PCA logic
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie, order = T)
eigen(R)$values
# Use Scree.Plot() function to request the graph of eigenvalues, add a descriptive title
Scree.Plot(R, main="Scree plot of 19 Psychological variables (n=360)") # plot the eigen values
#### Question 2 ####
# How many factors does the scree plot suggest to extract? Explain your reasoning
# A: 3, 4, or 5, depending on the rules you adopt in decision making
# Use FA.Stats() function to request Chi-Square and RMSEA statistics, add a descriptive title
FA.Stats(R, n.factors=1:10, n.obs=360, main="RMSEA plot of 19 Psych Variables (n=360)") # Request Chi-Square and RMSEA stats
out <- MLFA(Correlation.Matrix = R, n.factors=4, n.obs=360) # conduct MLFA and collect all rotations in a single object
Loadings(out, cutoff=.3, num.digits=2)
Loadings(out, cutoff=.3, num.digits=2)
FA.Stats(R, n.factors=1:10, n.obs=150, main="RMSEA plot of 19 Psych Variables (n=360)") # Request Chi-Square and RMSEA stats
