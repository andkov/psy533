rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
AthleticsData <- spss.get("AthleticsData.sav")
attach(AthleticsData)
AD.R <- cor(AthleticsData)
pureCFA.fit <- QuickCFA(AD.R,3,1000,"pureCFA",
c("HandEye","Endurance","Strength"))
summary(pureCFA.fit)
GetPattern(pureCFA.fit)
GetPrettyPattern(pureCFA.fit)
RMSEA(pureCFA.fit)
CheckMod(pureCFA.fit)
fit2 <- UseMod(pureCFA.fit)
CheckMod(fit2)
fit3 <- UseMod(fit2)
RMSEA(fit3)
CheckMod(pureCFA.fit)
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
AthleticsData <- spss.get("AthleticsData.sav")
attach(AthleticsData)
AD.R <- cor(AthleticsData)
pureCFA.fit <- QuickCFA(AD.R,3,1000,"pureCFA",
c("HandEye","Endurance","Strength"))
summary(pureCFA.fit)
CheckMod(pureCFA.fit)
rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
######### Set Up Working Directory!!
library(Hmisc)
library(sem)
source("http://statpower.net/Content/312/R%20Stuff/AdvancedFactorFunctions.txt")
AthleticsData <- spss.get("AthleticsData.sav")
attach(AthleticsData)
AD.R <- cor(AthleticsData)
pureCFA.fit <- QuickCFA(AD.R,3,1000,"pureCFA",
c("HandEye","Endurance","Strength"))
summary(pureCFA.fit)
GetPattern(pureCFA.fit)
GetPrettyPattern(pureCFA.fit)
RMSEA(pureCFA.fit)
CheckMod(pureCFA.fit)
degub(QuickJorskog)
debug(QuickJorskog)
debug(QuickJoreskog)
ssd <- read.csv("http://joshuawiley.com/files/ssd.csv")
rstudio::viewData(ssd)
ssd <- read.csv("http://joshuawiley.com/files/ssd.csv")
ssd$class <- factor(ssd$class)
summary(ssd)
table(ssd)
ssd <- read.csv("http://joshuawiley.com/files/ssd.csv")
ssd$class <- factor(ssd$class)
summary(ssd)
table(ssd$size)
hist(ssd$size)
table(ssd$price)
hist(ssd$price)
require(ggplot2)
## first pass
p <- ggplot(ssd, aes(x = price, y = size, colour = class)) +
geom_point()
print(p)
p <- p +
stat_smooth(se=FALSE)# +
scale_x_log10(breaks = seq(0, 1000, 100)) +
scale_y_log10(breaks = seq(0, 600, 100))
print(p)
p <- p +
stat_smooth(se=FALSE) +
scale_x_log10(breaks = seq(0, 1000, 100)) +
scale_y_log10(breaks = seq(0, 600, 100))
print(p)
