(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
View(A)
install.packages(c("matrixcalc","psych")
install.packages(c("matrixcalc","psych"))
rm(list=ls(all=TRUE))
install.packages(c("matrixcalc","psych"))
source("Steiger R library functions.txt")
library(matrixcalc)
library(psych)
(svdA<-svd(A))
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
(svdA<-svd(A))
evevA<-eigen(A)
evevA<-eigen(A%*%t(A))
evevA$values
evevA$vectors
(svdA<-svd(A))
evevA$values
A
evevA<-eigen(A%*%t(A)))
evevA<-eigen(A%*%t(A))
evevA$values
evevA$vectors
evevA<-eigen(t(A)%*%A)
evevA$values
evevA$vectors
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
# A = UDV'
svdA<-svdA)
svdA$u
svdA$d
svdA$v
svdA$u
svdA$d
svdA$v
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
svdA<-svdA)
# P312_HW05_KOVAL_ANDREY_part2
rm(list=ls(all=TRUE))
install.packages(c("matrixcalc","psych"))
source("Steiger R library functions.txt")
library(matrixcalc)
library(psych)
# The Great SVD mystery
#2.23
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
# A = UDV'
svdA<-svdA
svdA<-svd(A)
svdA$u
svdA$d
svdA$v
evevA<-eigen(t(A)%*%A)
evevA$values
evevA$vectors
# P312_HW05_KOVAL_ANDREY_part2
rm(list=ls(all=TRUE))
install.packages(c("matrixcalc","psych"))
source("Steiger R library functions.txt")
library(matrixcalc)
library(psych)
# The Great SVD mystery
#2.23
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
# A = UDV'
svdA<-svd(A)
svdA$u
svdA$d
svdA$v # = -(evevApA$vectors)
evevAAp<-eigen(A%*%t(A))
evevAAp$values
evevAAp$vectors
evevApA<-eigen(t(A)%*%A)
evevApA$values
evevApA$vectors
svdA$v # = -(evevApA$vectors)
evevApA$vectors
svdA$v # normalized eigenvector of ApA
evevApA$vectors
evevApA$vectors # normalized eigenvector of ApA
evevApA$values
evevApA<-eigen(t(A)%*%A)
evevAAp
svdA$u # normalized eigenvector of AAp
(svdA$u %*% diag(svdA$d) %*% t(svdA$v))
A
svdA
evevAAp
svdA$u # normalized eigenvector of AAp
svdA$d # square root of nonzero eigenvalues of AAp
svdA$v
svdA$u # normalized eigenvector of AAp
svdA$d # square root of nonzero eigenvalues of AAp
svdA$v # normalized eigenvector of ApA
evevAAp$values
evevAAp$vectors
evevAAp$vectors
evevApA$vectors # normalized eigenvector of ApA
U<-evevAAp$vectors[,1:3]
U
# The Great SVD mystery
#2.23
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
# A = UDV'
svdA<-svd(A)
U_svd<-svdA$u # normalized eigenvector of AAp
D_svd<-svdA$d # square root of nonzero eigenvalues of AAp
V_svd<-svdA$v # normalized eigenvector of ApA
evevAAp<-eigen(A%*%t(A))
D_AAp<-evevAAp$values
V_AAp<-evevAAp$vectors
evevApA<-eigen(t(A)%*%A)
D_ApA<-evevApA$values
V_ApA<-evevApA$vectors # normalized eigenvector of ApA
U_svd<-svdA$u # normalized eigenvector of AAp
U_svd
D_svd
V_svd
V_AAp
D_AAp
V_AAp
V_ApA
D_ApA
V_ApA
A
U_svd %*% D_svd %*% V_sdv
(A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3))
# A = UDV'
svdA<-svd(A)
U_svd<-svdA$u # normalized eigenvector of AAp
D_svd<-svdA$d # square root of nonzero eigenvalues of AAp
V_svd<-svdA$v # normalized eigenvector of ApA
evevAAp<-eigen(A%*%t(A))
D_AAp<-evevAAp$values
V_AAp<-evevAAp$vectors
evevApA<-eigen(t(A)%*%A)
D_ApA<-evevApA$values
V_ApA<-evevApA$vectors # normalized eigenvector of ApA
U_svd %*% D_svd %*% V_sdv
U_svd %*% D_svd %*% V_svd
U_svd %*% D_svd %*% t(V_svd)
U_svd
D_svd
V_svd
U_svd %*% D_svd
D_svd %*% t(V_svd)
U_svd %*% D_svd %*% t(V_svd)
U_svd %*% diag(D_svd) %*% t(V_svd)
A
U_svd %*% diag(D_svd) %*% t(V_svd)
rank(A)
?psych
?psych
(qr(A))$rank
evevAAp<-eigen(A%*%t(A)) # solve
D_AAp<-evevAAp$values
V_AAp<-evevAAp$vectors
A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3)
A
svdA<-svd(A)
U_svd
D_svd
V_svd
# A = VDV'    # Eigen decomposition, special case of SVD
# A = UDV'    # Single Value Decomposition
U_svd<-svdA$u # U
D_svd<-svdA$d # D
V_svd<-svdA$v # V
# A = UDV'    # Single Value Decomposition
U_svd
D_svd
V_svd
# A = VDV'    # Eigen decomposition, special case of SVD
D_AAp
V_AAp
D_ApA
V_ApA
U_V_AAp<-V_AAp[,1:3]
U_V_AAp
D_D_AAp<-diag(D_AAp)
D_D_AAp
D_AAp
D_AAp
D_ApA
# see survey at http://www.statmethods.net/advstats/matrix.html
# The Great SVD mystery
#2.23
# A - any nxp data matrix, with a rank of k
A <- matrix(c(4,7,-1,8,-5,-2,4,2,-1,3,-3,6),4,3)
(qr(A))$rank # rank of A - independent columns/variables
# A = UDV'    # Single Value Decomposition
svdA<-svd(A)
U_svd<-svdA$u # U
D_svd<-svdA$d # D
V_svd<-svdA$v # V
A
U_svd
D_svd
V_svd
U_svd %*% diag(D_svd) %*% t(V_svd) # reconstruction A with UDV' decomposition
D_svd
sqrt(D_AAp)
sqrt(D_AAp)
D_AAp
D_svd
D_svd
D_AAp
D_ApA
D_ApA
D_svd
D_AAp
D_ApA
sqrt(D_AAp)
sqrt(D_ApA)
source("Steiger R library functions.txt")
getwd()
